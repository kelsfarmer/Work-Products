DECLARE @startOfCurrentMonth DATETIME  --CREATES A NEW VARIABLE USED FOR FILTERING LATER IN THE QUERY
SET @startOfCurrentMonth = DATEADD(week, DATEDIFF(week, 0, CURRENT_TIMESTAMP), 0); --SET VARIABLE AS THE CURRENT DATE 
  
WITH workflow AS -- CREATE ALIAS FOR SUBQUERY TO BE SELF-JOINED BELOW
	(SELECT
	[InvoiceKey] -- THIS IS THE PRIMARY KEY FOR INVOICES
		,[Assignment]-- WORKFLOW NAME
		,[AssignedUserID]
		,MIN([TimeCreated])  AS MinTime -- TIMESTAMP
		,ROW_NUMBER() OVER (ORDER BY InvoiceKey, MIN([TimeCreated])) AS RN --ADD COLUMN FOR ROW NUMBER, USED IN JOIN TO FIND NEXT TRANSACTION
	FROM [Server].[dbo].[Invoice_Workflows_Table] (NOLOCK) --THIS IS THE TABLE WITH WORKFLOW ACTIONS
	WHERE 
		  [TimeCreated]  <= @startOfCurrentMonth  --EACH TIME THE QUERY RUNS IT PULLS MOST CURRENT MONTH OF TRANSACTIONS
	GROUP BY [InvoiceKey]
		,[Assignment]
		,[AssignedUserID]
	ORDER BY [InvoiceKey], MinTime --SORT BY TIMESTAMP SO RESULTS CAN BE JOINED BY ROW NUMBER WITH SUBSEQUENT TRANSACTION
	)
SELECT 
		copy1.[InvoiceKey] 
		,copy1.[Assignment] AS WorkBasket1 --COPY 1 = FIRST WORKBASKET TRANSACTION DUE
		,copy1.[AssignedUserID] AS User1 
		,copy1.MinTime AS StartTime --FIRST WB START TIME
		,copy2.[InvoiceKey] AS WorkBasket2 --COPY 2 = NEXT WORKBASKET TRANSACTION
		,copy2.MinTime AS NextStart --NEXT WB START TIME
		,DATEDIFF(second,copy1.MinTime,copy2.MinTime) AS ProcessTime --CALCULATE DIFFERENCE IN FIRST AND NEXT WB START TIMES
		,inv.[Office] 
		,inv.[OrderType] 
		,inv.[InvoiceType] -- INVOICE SOURCE DESCRIPTION (ONLINE, PHONE, RETAIL_STORE)
		,inv.[DiscountInvoiceFlag] --FLAG FOR DISCOUNT INVOICES
		,inv.[TotalAmt] 
		,CASE
			WHEN inv.[TotalAmt]<=2500 THEN '<=$2500'
			WHEN inv.[TotalAmt]<=100000 AND inv.[TotalDue]>2500 THEN '$25K-$100K'
			WHEN inv.[TotalAmt]>100000 THEN '>$100K'
			ELSE 'Null'
			END AS Invoice_Levels --USED FOR DIMENSIONAL ANALYSIS
FROM workbaskets AS copy1 --GIVE THE FIRST QUERY USING TO ALIAS'; copy1 AND copy2
  LEFT JOIN workbaskets AS copy2
	ON copy1.RN = copy2.RN - 1 --SUBTRACT 1 FROM ROW COUNT TO LAG AND ALLOW MATCHING OF RECORD WITH PRIOR ACTION
	AND copy1.[InvoiceKey]=copy2.[InvoiceKey] --2ND JOIN CRITERIA, IPPS ID MUST MATCH
  LEFT JOIN [Server].[dbo].[Invoice_Header_Table] (NOLOCK) AS inv --THIS IS THE TABLE WITH INVOICE DETAILS
	ON copy1.[Invoice_Workflows_Table]= inv.[InvoiceKey] --JOIN WORKBASKET TABLE WITH INVOICE TABLE ON IPPS ID
WHERE copy2.[Assignment] IS NOT NULL --THIS FILTER ELIMINATES TRANSACTIONS WITHOUT A MATCHING NEXT WORKBASKET; ONLY THOSE FINSHED PROCESSING
ORDER BY copy1.[InvoiceKey], copy1.MinTime 
